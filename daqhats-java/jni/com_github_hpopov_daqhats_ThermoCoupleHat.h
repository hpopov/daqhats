/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_github_hpopov_daqhats_ThermoCoupleHat */

#ifndef _Included_com_github_hpopov_daqhats_ThermoCoupleHat
#define _Included_com_github_hpopov_daqhats_ThermoCoupleHat
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_github_hpopov_daqhats_ThermoCoupleHat
 * Method:    openConnectionWithMcc134Hat
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_com_github_hpopov_daqhats_ThermoCoupleHat_openConnectionWithMcc134Hat
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_github_hpopov_daqhats_ThermoCoupleHat
 * Method:    setMcc134ThermoCoupleType
 * Signature: (III)Z
 */
JNIEXPORT jboolean JNICALL Java_com_github_hpopov_daqhats_ThermoCoupleHat_setMcc134ThermoCoupleType
  (JNIEnv *, jclass, jint, jint, jint);

/*
 * Class:     com_github_hpopov_daqhats_ThermoCoupleHat
 * Method:    readMcc134ThermoCoupleValue
 * Signature: (II)Lcom/github/hpopov/daqhats/ThermoCoupleValue;
 */
JNIEXPORT jobject JNICALL Java_com_github_hpopov_daqhats_ThermoCoupleHat_readMcc134ThermoCoupleValue
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     com_github_hpopov_daqhats_ThermoCoupleHat
 * Method:    closeConnectionWithMcc134Hat
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_com_github_hpopov_daqhats_ThermoCoupleHat_closeConnectionWithMcc134Hat
  (JNIEnv *, jclass, jint);

#ifdef __cplusplus
}
#endif
#endif
